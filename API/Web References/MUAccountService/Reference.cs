//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace API.MUAccountService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MUServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MUService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getErrorMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameENOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDepartmentCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFacultyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFacultyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMajorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFullUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileFromUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserExpireDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MUService() {
            this.Url = global::API.Properties.Settings.Default.API_MUAccountService_MUService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authenCompletedEventHandler authenCompleted;
        
        /// <remarks/>
        public event getErrorMessageCompletedEventHandler getErrorMessageCompleted;
        
        /// <remarks/>
        public event getUserTypeCompletedEventHandler getUserTypeCompleted;
        
        /// <remarks/>
        public event getNameTHCompletedEventHandler getNameTHCompleted;
        
        /// <remarks/>
        public event getNameENCompletedEventHandler getNameENCompleted;
        
        /// <remarks/>
        public event getMailAddressCompletedEventHandler getMailAddressCompleted;
        
        /// <remarks/>
        public event getDepartmentCodeCompletedEventHandler getDepartmentCodeCompleted;
        
        /// <remarks/>
        public event getFacultyCodeCompletedEventHandler getFacultyCodeCompleted;
        
        /// <remarks/>
        public event getFacultyNameCompletedEventHandler getFacultyNameCompleted;
        
        /// <remarks/>
        public event getMajorCompletedEventHandler getMajorCompleted;
        
        /// <remarks/>
        public event getProgramCodeCompletedEventHandler getProgramCodeCompleted;
        
        /// <remarks/>
        public event getProgramNameCompletedEventHandler getProgramNameCompleted;
        
        /// <remarks/>
        public event getUsernameCompletedEventHandler getUsernameCompleted;
        
        /// <remarks/>
        public event getFullUIDCompletedEventHandler getFullUIDCompleted;
        
        /// <remarks/>
        public event getUIDCompletedEventHandler getUIDCompleted;
        
        /// <remarks/>
        public event getProfileFromUIDCompletedEventHandler getProfileFromUIDCompleted;
        
        /// <remarks/>
        public event getProfileCompletedEventHandler getProfileCompleted;
        
        /// <remarks/>
        public event getUserPermissionCompletedEventHandler getUserPermissionCompleted;
        
        /// <remarks/>
        public event getUserStatusCompletedEventHandler getUserStatusCompleted;
        
        /// <remarks/>
        public event getUserExpireDateCompletedEventHandler getUserExpireDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/authen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int authen(string username, string password, string systemID, int type) {
            object[] results = this.Invoke("authen", new object[] {
                        username,
                        password,
                        systemID,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void authenAsync(string username, string password, string systemID, int type) {
            this.authenAsync(username, password, systemID, type, null);
        }
        
        /// <remarks/>
        public void authenAsync(string username, string password, string systemID, int type, object userState) {
            if ((this.authenOperationCompleted == null)) {
                this.authenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenOperationCompleted);
            }
            this.InvokeAsync("authen", new object[] {
                        username,
                        password,
                        systemID,
                        type}, this.authenOperationCompleted, userState);
        }
        
        private void OnauthenOperationCompleted(object arg) {
            if ((this.authenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenCompleted(this, new authenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getErrorMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getErrorMessage(int signCode) {
            object[] results = this.Invoke("getErrorMessage", new object[] {
                        signCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getErrorMessageAsync(int signCode) {
            this.getErrorMessageAsync(signCode, null);
        }
        
        /// <remarks/>
        public void getErrorMessageAsync(int signCode, object userState) {
            if ((this.getErrorMessageOperationCompleted == null)) {
                this.getErrorMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrorMessageOperationCompleted);
            }
            this.InvokeAsync("getErrorMessage", new object[] {
                        signCode}, this.getErrorMessageOperationCompleted, userState);
        }
        
        private void OngetErrorMessageOperationCompleted(object arg) {
            if ((this.getErrorMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErrorMessageCompleted(this, new getErrorMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserType(string username, string systemID, int type) {
            object[] results = this.Invoke("getUserType", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserTypeAsync(string username, string systemID, int type) {
            this.getUserTypeAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUserTypeAsync(string username, string systemID, int type, object userState) {
            if ((this.getUserTypeOperationCompleted == null)) {
                this.getUserTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserTypeOperationCompleted);
            }
            this.InvokeAsync("getUserType", new object[] {
                        username,
                        systemID,
                        type}, this.getUserTypeOperationCompleted, userState);
        }
        
        private void OngetUserTypeOperationCompleted(object arg) {
            if ((this.getUserTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserTypeCompleted(this, new getUserTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNameTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getNameTH(string username, string systemID, int type) {
            object[] results = this.Invoke("getNameTH", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNameTHAsync(string username, string systemID, int type) {
            this.getNameTHAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getNameTHAsync(string username, string systemID, int type, object userState) {
            if ((this.getNameTHOperationCompleted == null)) {
                this.getNameTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameTHOperationCompleted);
            }
            this.InvokeAsync("getNameTH", new object[] {
                        username,
                        systemID,
                        type}, this.getNameTHOperationCompleted, userState);
        }
        
        private void OngetNameTHOperationCompleted(object arg) {
            if ((this.getNameTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameTHCompleted(this, new getNameTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNameEN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getNameEN(string username, string systemID, int type) {
            object[] results = this.Invoke("getNameEN", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNameENAsync(string username, string systemID, int type) {
            this.getNameENAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getNameENAsync(string username, string systemID, int type, object userState) {
            if ((this.getNameENOperationCompleted == null)) {
                this.getNameENOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameENOperationCompleted);
            }
            this.InvokeAsync("getNameEN", new object[] {
                        username,
                        systemID,
                        type}, this.getNameENOperationCompleted, userState);
        }
        
        private void OngetNameENOperationCompleted(object arg) {
            if ((this.getNameENCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameENCompleted(this, new getNameENCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMailAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMailAddress(string username, string systemID, int type) {
            object[] results = this.Invoke("getMailAddress", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMailAddressAsync(string username, string systemID, int type) {
            this.getMailAddressAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getMailAddressAsync(string username, string systemID, int type, object userState) {
            if ((this.getMailAddressOperationCompleted == null)) {
                this.getMailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailAddressOperationCompleted);
            }
            this.InvokeAsync("getMailAddress", new object[] {
                        username,
                        systemID,
                        type}, this.getMailAddressOperationCompleted, userState);
        }
        
        private void OngetMailAddressOperationCompleted(object arg) {
            if ((this.getMailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailAddressCompleted(this, new getMailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDepartmentCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDepartmentCode(string username, string systemID, int type) {
            object[] results = this.Invoke("getDepartmentCode", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDepartmentCodeAsync(string username, string systemID, int type) {
            this.getDepartmentCodeAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getDepartmentCodeAsync(string username, string systemID, int type, object userState) {
            if ((this.getDepartmentCodeOperationCompleted == null)) {
                this.getDepartmentCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepartmentCodeOperationCompleted);
            }
            this.InvokeAsync("getDepartmentCode", new object[] {
                        username,
                        systemID,
                        type}, this.getDepartmentCodeOperationCompleted, userState);
        }
        
        private void OngetDepartmentCodeOperationCompleted(object arg) {
            if ((this.getDepartmentCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepartmentCodeCompleted(this, new getDepartmentCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFacultyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFacultyCode(string username, string systemID, int type) {
            object[] results = this.Invoke("getFacultyCode", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFacultyCodeAsync(string username, string systemID, int type) {
            this.getFacultyCodeAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getFacultyCodeAsync(string username, string systemID, int type, object userState) {
            if ((this.getFacultyCodeOperationCompleted == null)) {
                this.getFacultyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFacultyCodeOperationCompleted);
            }
            this.InvokeAsync("getFacultyCode", new object[] {
                        username,
                        systemID,
                        type}, this.getFacultyCodeOperationCompleted, userState);
        }
        
        private void OngetFacultyCodeOperationCompleted(object arg) {
            if ((this.getFacultyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFacultyCodeCompleted(this, new getFacultyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFacultyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFacultyName(string username, string systemID, int type) {
            object[] results = this.Invoke("getFacultyName", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFacultyNameAsync(string username, string systemID, int type) {
            this.getFacultyNameAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getFacultyNameAsync(string username, string systemID, int type, object userState) {
            if ((this.getFacultyNameOperationCompleted == null)) {
                this.getFacultyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFacultyNameOperationCompleted);
            }
            this.InvokeAsync("getFacultyName", new object[] {
                        username,
                        systemID,
                        type}, this.getFacultyNameOperationCompleted, userState);
        }
        
        private void OngetFacultyNameOperationCompleted(object arg) {
            if ((this.getFacultyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFacultyNameCompleted(this, new getFacultyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMajor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMajor(string username, string systemID, int type) {
            object[] results = this.Invoke("getMajor", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMajorAsync(string username, string systemID, int type) {
            this.getMajorAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getMajorAsync(string username, string systemID, int type, object userState) {
            if ((this.getMajorOperationCompleted == null)) {
                this.getMajorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMajorOperationCompleted);
            }
            this.InvokeAsync("getMajor", new object[] {
                        username,
                        systemID,
                        type}, this.getMajorOperationCompleted, userState);
        }
        
        private void OngetMajorOperationCompleted(object arg) {
            if ((this.getMajorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMajorCompleted(this, new getMajorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProgramCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getProgramCode(string username, string systemID, int type) {
            object[] results = this.Invoke("getProgramCode", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramCodeAsync(string username, string systemID, int type) {
            this.getProgramCodeAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getProgramCodeAsync(string username, string systemID, int type, object userState) {
            if ((this.getProgramCodeOperationCompleted == null)) {
                this.getProgramCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramCodeOperationCompleted);
            }
            this.InvokeAsync("getProgramCode", new object[] {
                        username,
                        systemID,
                        type}, this.getProgramCodeOperationCompleted, userState);
        }
        
        private void OngetProgramCodeOperationCompleted(object arg) {
            if ((this.getProgramCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramCodeCompleted(this, new getProgramCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProgramName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getProgramName(string username, string systemID, int type) {
            object[] results = this.Invoke("getProgramName", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramNameAsync(string username, string systemID, int type) {
            this.getProgramNameAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getProgramNameAsync(string username, string systemID, int type, object userState) {
            if ((this.getProgramNameOperationCompleted == null)) {
                this.getProgramNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramNameOperationCompleted);
            }
            this.InvokeAsync("getProgramName", new object[] {
                        username,
                        systemID,
                        type}, this.getProgramNameOperationCompleted, userState);
        }
        
        private void OngetProgramNameOperationCompleted(object arg) {
            if ((this.getProgramNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramNameCompleted(this, new getProgramNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUsername(string UID, string systemID, int type) {
            object[] results = this.Invoke("getUsername", new object[] {
                        UID,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsernameAsync(string UID, string systemID, int type) {
            this.getUsernameAsync(UID, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUsernameAsync(string UID, string systemID, int type, object userState) {
            if ((this.getUsernameOperationCompleted == null)) {
                this.getUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsernameOperationCompleted);
            }
            this.InvokeAsync("getUsername", new object[] {
                        UID,
                        systemID,
                        type}, this.getUsernameOperationCompleted, userState);
        }
        
        private void OngetUsernameOperationCompleted(object arg) {
            if ((this.getUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsernameCompleted(this, new getUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFullUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFullUID(string username, string systemID, int type) {
            object[] results = this.Invoke("getFullUID", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFullUIDAsync(string username, string systemID, int type) {
            this.getFullUIDAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getFullUIDAsync(string username, string systemID, int type, object userState) {
            if ((this.getFullUIDOperationCompleted == null)) {
                this.getFullUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFullUIDOperationCompleted);
            }
            this.InvokeAsync("getFullUID", new object[] {
                        username,
                        systemID,
                        type}, this.getFullUIDOperationCompleted, userState);
        }
        
        private void OngetFullUIDOperationCompleted(object arg) {
            if ((this.getFullUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFullUIDCompleted(this, new getFullUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUID(string username, string systemID, int type) {
            object[] results = this.Invoke("getUID", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUIDAsync(string username, string systemID, int type) {
            this.getUIDAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUIDAsync(string username, string systemID, int type, object userState) {
            if ((this.getUIDOperationCompleted == null)) {
                this.getUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUIDOperationCompleted);
            }
            this.InvokeAsync("getUID", new object[] {
                        username,
                        systemID,
                        type}, this.getUIDOperationCompleted, userState);
        }
        
        private void OngetUIDOperationCompleted(object arg) {
            if ((this.getUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUIDCompleted(this, new getUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProfileFromUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getProfileFromUID([System.Xml.Serialization.XmlElementAttribute("getFullUID")] string getFullUID1, string systemID, int type) {
            object[] results = this.Invoke("getProfileFromUID", new object[] {
                        getFullUID1,
                        systemID,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileFromUIDAsync(string getFullUID1, string systemID, int type) {
            this.getProfileFromUIDAsync(getFullUID1, systemID, type, null);
        }
        
        /// <remarks/>
        public void getProfileFromUIDAsync(string getFullUID1, string systemID, int type, object userState) {
            if ((this.getProfileFromUIDOperationCompleted == null)) {
                this.getProfileFromUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileFromUIDOperationCompleted);
            }
            this.InvokeAsync("getProfileFromUID", new object[] {
                        getFullUID1,
                        systemID,
                        type}, this.getProfileFromUIDOperationCompleted, userState);
        }
        
        private void OngetProfileFromUIDOperationCompleted(object arg) {
            if ((this.getProfileFromUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileFromUIDCompleted(this, new getProfileFromUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getProfile(string username, string systemID, int type) {
            object[] results = this.Invoke("getProfile", new object[] {
                        username,
                        systemID,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileAsync(string username, string systemID, int type) {
            this.getProfileAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getProfileAsync(string username, string systemID, int type, object userState) {
            if ((this.getProfileOperationCompleted == null)) {
                this.getProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileOperationCompleted);
            }
            this.InvokeAsync("getProfile", new object[] {
                        username,
                        systemID,
                        type}, this.getProfileOperationCompleted, userState);
        }
        
        private void OngetProfileOperationCompleted(object arg) {
            if ((this.getProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileCompleted(this, new getProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getUserPermission(string username, string systemID, int type) {
            object[] results = this.Invoke("getUserPermission", new object[] {
                        username,
                        systemID,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPermissionAsync(string username, string systemID, int type) {
            this.getUserPermissionAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUserPermissionAsync(string username, string systemID, int type, object userState) {
            if ((this.getUserPermissionOperationCompleted == null)) {
                this.getUserPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPermissionOperationCompleted);
            }
            this.InvokeAsync("getUserPermission", new object[] {
                        username,
                        systemID,
                        type}, this.getUserPermissionOperationCompleted, userState);
        }
        
        private void OngetUserPermissionOperationCompleted(object arg) {
            if ((this.getUserPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPermissionCompleted(this, new getUserPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getUserStatus(string username, string systemID, int type) {
            object[] results = this.Invoke("getUserStatus", new object[] {
                        username,
                        systemID,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getUserStatusAsync(string username, string systemID, int type) {
            this.getUserStatusAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUserStatusAsync(string username, string systemID, int type, object userState) {
            if ((this.getUserStatusOperationCompleted == null)) {
                this.getUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserStatusOperationCompleted);
            }
            this.InvokeAsync("getUserStatus", new object[] {
                        username,
                        systemID,
                        type}, this.getUserStatusOperationCompleted, userState);
        }
        
        private void OngetUserStatusOperationCompleted(object arg) {
            if ((this.getUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserStatusCompleted(this, new getUserStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserExpireDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserExpireDate(string username, string systemID, int type) {
            object[] results = this.Invoke("getUserExpireDate", new object[] {
                        username,
                        systemID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserExpireDateAsync(string username, string systemID, int type) {
            this.getUserExpireDateAsync(username, systemID, type, null);
        }
        
        /// <remarks/>
        public void getUserExpireDateAsync(string username, string systemID, int type, object userState) {
            if ((this.getUserExpireDateOperationCompleted == null)) {
                this.getUserExpireDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserExpireDateOperationCompleted);
            }
            this.InvokeAsync("getUserExpireDate", new object[] {
                        username,
                        systemID,
                        type}, this.getUserExpireDateOperationCompleted, userState);
        }
        
        private void OngetUserExpireDateOperationCompleted(object arg) {
            if ((this.getUserExpireDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserExpireDateCompleted(this, new getUserExpireDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void authenCompletedEventHandler(object sender, authenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getErrorMessageCompletedEventHandler(object sender, getErrorMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErrorMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErrorMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUserTypeCompletedEventHandler(object sender, getUserTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getNameTHCompletedEventHandler(object sender, getNameTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getNameENCompletedEventHandler(object sender, getNameENCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameENCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameENCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getMailAddressCompletedEventHandler(object sender, getMailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getDepartmentCodeCompletedEventHandler(object sender, getDepartmentCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepartmentCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepartmentCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getFacultyCodeCompletedEventHandler(object sender, getFacultyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFacultyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFacultyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getFacultyNameCompletedEventHandler(object sender, getFacultyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFacultyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFacultyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getMajorCompletedEventHandler(object sender, getMajorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMajorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMajorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProgramCodeCompletedEventHandler(object sender, getProgramCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProgramNameCompletedEventHandler(object sender, getProgramNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUsernameCompletedEventHandler(object sender, getUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getFullUIDCompletedEventHandler(object sender, getFullUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFullUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFullUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUIDCompletedEventHandler(object sender, getUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProfileFromUIDCompletedEventHandler(object sender, getProfileFromUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileFromUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileFromUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProfileCompletedEventHandler(object sender, getProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUserPermissionCompletedEventHandler(object sender, getUserPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUserStatusCompletedEventHandler(object sender, getUserStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getUserExpireDateCompletedEventHandler(object sender, getUserExpireDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserExpireDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserExpireDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591